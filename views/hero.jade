extends frame


block body
    //- img(src='http://cdn.dota2.com/apps/dota2/images/heroes/#{hero}_hphover.png')
    //- #d(style="height: 10px;")
    #chart(style="width: 90%;height:400px;")
    #items

    script(src="/libs/jquery-3.1.1.min.js")
    script(src="/libs/echarts.js")


    script(stype="text/javascript").

        var charts = {};
        var xAxisData = [];
        for (var i = 0; i < 2000; i+= 10)
            xAxisData.push(i.toString());
        // 基于准备好的dom，初始化echarts实例
        function draw()
        {
            var myChart = echarts.init(document.getElementById('chart'));
            myChart.showLoading();
            var series = [];
            for (var item in charts)
            {
                if (charts[item].used)
                    series.push(charts[item]);
            }

            console.log(series)

            option = {
                tooltip: {
                    trigger: 'axis'
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'category',
                    boundaryGap: false,
                    data: xAxisData
                },
                yAxis: {
                    type: 'value',
                    plotLines:[{value:0.5}]

                },
                series: series
            };


                
            myChart.hideLoading();
            myChart.setOption(option);
            //document.getElementById("main").innerHTML = content; 
        }

        function getDetails(item)
        {
            if (charts[item]) 
            {
                charts[item].used = true;
                draw();
                return;
            }

            $.get('/api/GetItemDetails/?hero=#{hero}&item=' + item , function (details) 
            {
                var data = [];

                for (var i in details)
                {
                    var d = details[i];
                    if (d.used > 10 )
                    data.push([d.timestamp, d.win / d.used]);
                }

                charts[item] = {name: item, type:"line", data: data, smooth:true, used: true,  symbol:'none', markLine:{data : [{type : 'average', name: '平均值'}]}};
                draw();
            })
        }

        $.get('/api/GetItems', function (items) 
        {
            var content = "";
            for (var index in items)
            {
                if (items[index].cost != 0 && items[index].recipe == 0)
                {
                    var name = items[index].name.match(/item_(.*)/)[1];
                    content += "<img " + "id='" + name + "'width='16px' height='16px' src='http://cdn.dota2.com/apps/dota2/images/items/" + name + "_lg.png' />";
                }
            }

            document.getElementById("items").innerHTML = content; 

            for (var index in items)
            {
                if (items[index].cost != 0 && items[index].recipe == 0)
                {
                    
                    var name = items[index].name.match(/item_(.*)/)[1];
                    var e = document.getElementById(name)
                    e.onclick = function(obj)
                    {
                        console.log(obj.srcElement.id)
                        var c = charts[obj.srcElement.id];
                        if (c && c.used)
                        {
                            c.used = false;
                            draw();
                        }
                        else
                            getDetails(obj.srcElement.id);
                    }
                }
            }
        })

        draw();
        window.onresize =function(){  draw();}  
  